@model HarmonicPatternsBase.Models.StatisticsViewModels.StatisticsIndexViewModel


@{
    ViewData["Title"] = "Baza układów harmonicznych";

    List<List<int>> chartData10c = new List<List<int>>();
    List<List<int>> chartData20c = new List<List<int>>();

    List<int> chartDataReactionAfter5 = new List<int>();
    List<int> chartDataReactionAfter10 = new List<int>();
    List<int> chartDataReactionAfter20 = new List<int>();
}


<div style="background-color:#36424a">
    <div class="container" style="padding:20px;">

        <div class="dropdown" style="display:inline-block;">
            <button class="btn button-purple dropdown-toggle button-nav" type="button" id="dropdownMenu"
                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">

                @if (Model.SelectedInstrument == null)
                {
                    <span>Instrument</span>
                }
                else
                {
                    @Model.SelectedInstrument.Name
                }

                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenu">

                <li>
                    <a asp-action="Index"
                       asp-route-userid="@Model.SelectedUserId"
                       asp-route-datesince="@Model.DateSince"
                       asp-route-dateto="@Model.DateTo"
                       asp-route-adddatesince="@Model.AddDateSince"
                       asp-route-adddateto="@Model.AddDateTo"
                       asp-route-intervalid="@Model.SelectedIntervalId"
                       asp-route-patterntypeid="@Model.SelectedPatternId"
                       asp-route-patterndirectid="@Model.SelectedDirectId"
                       asp-route-instrumentid="@null">
                        Wszystkie instrumenty
                    </a>
                </li>

                <li class="divider"></li>

                @{foreach (var category in Model.InstrumentsCategories)
                    {
                        <li class="menu-item dropdown dropdown-submenu">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">@category.Name</a>
                            <ul class="dropdown-menu">
                                @foreach (var item in category.Instruments)
                                {
                                    <li>
                                        <a asp-action="Index"
                                           asp-route-userid="@Model.SelectedUserId"
                                           asp-route-datesince="@Model.DateSince"
                                           asp-route-dateto="@Model.DateTo"
                                           asp-route-adddatesince="@Model.AddDateSince"
                                           asp-route-adddateto="@Model.AddDateTo"
                                           asp-route-intervalid="@Model.SelectedIntervalId"
                                           asp-route-patterntypeid="@Model.SelectedPatternId"
                                           asp-route-patterndirectid="@Model.SelectedDirectId"
                                           asp-route-instrumentid="@item.Id">
                                            @item.Name
                                        </a>
                                    </li>
                                }
                            </ul>
                        </li>
                    }
                }
            </ul>
        </div>


        <div class="dropdown" style="display:inline-block;">
            <button class="btn button-blue dropdown-toggle button-nav" type="button" id="dropdownMenu"
                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">

                @if (Model.SelectedPattern == null)
                {
                    <span>Uklad</span>
                }
                else
                {
                    @Model.SelectedPattern.Name
                }

                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenu">

                <li>
                    <a asp-action="Index"
                       asp-route-userid="@Model.SelectedUserId"
                       asp-route-datesince="@Model.DateSince"
                       asp-route-dateto="@Model.DateTo"
                       asp-route-adddatesince="@Model.AddDateSince"
                       asp-route-adddateto="@Model.AddDateTo"
                       asp-route-intervalid="@Model.SelectedIntervalId"
                       asp-route-instrumentid="@Model.SelectedInstrumentId"
                       asp-route-patterndirectid="@Model.SelectedDirectId"
                       asp-route-patterntypeid="@null">
                        Wszystkie uklady
                    </a>
                </li>

                <li class="divider"></li>

                @foreach (var item in Model.PatternTypes)
                {
                    <li>
                        <a asp-action="Index"
                           asp-route-userid="@Model.SelectedUserId"
                           asp-route-datesince="@Model.DateSince"
                           asp-route-dateto="@Model.DateTo"
                           asp-route-adddatesince="@Model.AddDateSince"
                           asp-route-adddateto="@Model.AddDateTo"
                           asp-route-intervalid="@Model.SelectedIntervalId"
                           asp-route-instrumentid="@Model.SelectedInstrumentId"
                           asp-route-patterndirectid="@Model.SelectedDirectId"
                           asp-route-patterntypeid="@item.Id">
                            @item.Name
                        </a>
                    </li>
                }
            </ul>
        </div>

        <div class="dropdown" style="display:inline-block;">
            <button class="btn button-green dropdown-toggle button-nav" type="button" id="dropdownMenu"
                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">

                @if (Model.SelectedInterval == null)
                {
                    <span>Interwal</span>
                }
                else
                {
                    @Model.SelectedInterval.Name
                }

                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenu">

                <li>
                    <a asp-action="Index"
                       asp-route-userid="@Model.SelectedUserId"
                       asp-route-datesince="@Model.DateSince"
                       asp-route-dateto="@Model.DateTo"
                       asp-route-adddatesince="@Model.AddDateSince"
                       asp-route-adddateto="@Model.AddDateTo"
                       asp-route-patterntypeid="@Model.SelectedPatternId"
                       asp-route-instrumentid="@Model.SelectedInstrumentId"
                       asp-route-patterndirectid="@Model.SelectedDirectId"
                       asp-route-intervalid="@null">
                        Wszystkie interwaly
                    </a>
                </li>

                <li class="divider"></li>

                @foreach (var item in Model.Intervals)
                {
                    <li>
                        <a asp-action="Index"
                           asp-route-userid="@Model.SelectedUserId"
                           asp-route-datesince="@Model.DateSince"
                           asp-route-dateto="@Model.DateTo"
                           asp-route-adddatesince="@Model.AddDateSince"
                           asp-route-adddateto="@Model.AddDateTo"
                           asp-route-patterntypeid="@Model.SelectedPatternId"
                           asp-route-instrumentid="@Model.SelectedInstrumentId"
                           asp-route-patterndirectid="@Model.SelectedDirectId"
                           asp-route-intervalid="@item.Id">
                            @item.Name
                        </a>
                    </li>
                }
            </ul>
        </div>

        <div class="dropdown" style="display:inline-block;">
            <button class="btn button-pink dropdown-toggle button-nav" type="button" id="dropdownMenu"
                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">

                @if (Model.SelectedDirect == null)
                {
                    <span>Kierunek</span>
                }
                else
                {
                    @Model.SelectedDirect.Name
                }

                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenu">

                <li>
                    <a asp-action="Index"
                       asp-route-userid="@Model.SelectedUserId"
                       asp-route-datesince="@Model.DateSince"
                       asp-route-dateto="@Model.DateTo"
                       asp-route-adddatesince="@Model.AddDateSince"
                       asp-route-adddateto="@Model.AddDateTo"
                       asp-route-intervalid="@Model.SelectedIntervalId"
                       asp-route-patterntypeid="@Model.SelectedPatternId"
                       asp-route-instrumentid="@Model.SelectedInstrumentId"
                       asp-route-patterndirectid="@null">
                        Wszystkie kierunki
                    </a>
                </li>

                <li class="divider"></li>

                @foreach (var item in Model.PatternDirects)
                {
                    <li>
                        <a asp-action="Index"
                           asp-route-userid="@Model.SelectedUserId"
                           asp-route-datesince="@Model.DateSince"
                           asp-route-dateto="@Model.DateTo"
                           asp-route-adddatesince="@Model.AddDateSince"
                           asp-route-adddateto="@Model.AddDateTo"
                           asp-route-intervalid="@Model.SelectedIntervalId"
                           asp-route-patterntypeid="@Model.SelectedPatternId"
                           asp-route-instrumentid="@Model.SelectedInstrumentId"
                           asp-route-patterndirectid="@item.Id">
                            @item.Name
                        </a>
                    </li>
                }
            </ul>
        </div>

        <div class="navbar-right" style="display:inline-block;">
            <a asp-area="" asp-controller="HarmonicPatterns" asp-action="Create" class="btn button-navframe">Dodaj</a>
        </div>

    </div>
</div>

<div style="padding-top:30px; padding-bottom:5px; background-color:#c1d0d3" id="advencedOptions" hidden>

    <div class="container">

        <form asp-controller="HarmonicPatterns"
              asp-action="index"
              asp-route-userid="@Model.SelectedUserId"
              asp-route-intervalid="@Model.SelectedIntervalId"
              asp-route-patterntypeid="@Model.SelectedPatternId"
              asp-route-instrumentid="@Model.SelectedInstrumentId"
              asp-route-patterndirectid="@Model.SelectedDirectId" method="get">

            <div class="row">
                <div class="row">
                    <div class="col-md-3">
                        <div class="text" style="font-size:18px;">
                            Data wystapienia na rynku:
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div>
                            <input type="date" class="form-control" style="display:inline-block;" name="dateSince" value="@Model.DateSinceString">
                            -
                            <input type="date" class="form-control" style="display:inline-block;" name="dateTo" value="@Model.DateToString">
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col-md-3">
                        <div class="text" style="font-size:18px;">
                            Data dodania do bazy:
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div>
                            <input type="date" class="form-control" style="display:inline-block;" name="addDateSince" value="@Model.AddDateSinceString">
                            -
                            <input type="date" class="form-control" style="display:inline-block;" name="addDateTo" value="@Model.AddDateToString">
                        </div>
                    </div>
                </div>
            </div>

            <div style="text-align:center; margin-top:30px; margin-bottom:10px;">
                <input type="submit" class="btn btn button-blueframe" style="background-color:#c1d0d3; padding: 8px 25px; font-weight:bold" value="Szukaj ukladow">
            </div>

        </form>
    </div>

</div>

<div style="background-color:#c1d0d3; padding:0px; color:#167aa3; text-align:center">
    <button id="advencedOptionsTriggerUp" class="btn button-chevron" style="display: none;">
        <span class="glyphicon glyphicon-chevron-up"></span>
    </button>
    <button id="advencedOptionsTriggerDown" class="btn button-chevron">
        <span class="glyphicon glyphicon-chevron-down"></span>
    </button>
</div>

<div style="padding:30px; background-color:#d6d9dc">

    <div class="text container">

        <div class="text-blue" style="font-size:15px; margin-left:40px;">
            <span style="color:#920063"><strong> @Model.Statistics.Count </strong></span>
            ukladow
            @if (Model.SelectedInstrumentId != null)
            {
                <span><a asp-action="Edit" class="btn button-purple"> @Model.SelectedInstrument.Name</a></span>
            }
            @if (Model.SelectedPatternId != null)
            {
                <a asp-controller="Patterns" asp-action="Details" asp-route-id="@Model.SelectedPattern.Id" class="btn button-blue">@Model.SelectedPattern.Name</a>
            }
            @if (Model.SelectedIntervalId != null)
            {
                <a asp-action="Edit" class="btn button-green">@Model.SelectedInterval.Name</a>
            }
            @if (Model.SelectedDirectId != null)
            {
                <a asp-action="Edit" class="btn button-pink">@Model.SelectedDirect.Name</a>
            }
            @if (Model.SelectedUser != null)
            {
                <span>dodanych przez</span>
                        <div class="userHolder-rounded">
                            @if (Model.SelectedUser.Avatar.Length > 5)
                            {
                                var base64 = Convert.ToBase64String(Model.SelectedUser.Avatar);
                                var userImageContent = String.Format("data:image/gif;base64,{0}", base64);
                                <img src='@userImageContent' class="img-circle" style="height:40px; width:40px; display:inline-block;" />
                                <a asp-action="Index" asp-controller="User" asp-route-userid="@Model.SelectedUserId" class="text text-blue" style="margin-left:5px; margin-right:10px; display:inline-block; font-size:12px;">@Model.SelectedUser.Nick.ToUpper()</a>
                            }
                        </div>
            }

            w bazie danych

            @if (Model.SelectedInstrumentId != null ||
            Model.SelectedPatternId != null ||
            Model.SelectedIntervalId != null ||
            Model.SelectedDirectId != null ||
            Model.SelectedUser != null)
            {
                <a asp-controller="HarmonicPatterns"
                   asp-action="Index"
                   class="btn button-blueframe"
                   style="margin-left:10px;">
                    usun filtry
                </a>
            }


        </div>


        <div class="row" style="margin-top:55px;">

            <div class="col-md-4">
                @*
                <div style="margin-bottom:15px;">
                    POZIOM REAKCJI OSIAGNIETE PO 5 SWIECACH
                </div>
                @foreach (var item in Model.Statistics.ReactionAfter5Candles)
                {
                    <div class="row" style="margin-bottom:5px;">
                        <div class="col-md-2">
                            <span style="color:#920063;"><strong>@item.PercentOfAllData.ToString("#")%</strong> </span>
                        </div>
                        <div class="col-md-7">
                            ukladow osiagnelo poziom
                        </div>
                        <div class="col-md-2" style="text-align:center">
                            <a asp-controller="Info" asp-action="Reactions" style="color:#920063">@Model.ReactionLevels.Find(h => h.Id == item.ReactionId).Name</a>
                        </div>
                    </div>
                }
                *@

                @foreach (var item in Model.Statistics.ReactionAfter5Candles)
                {
                    chartDataReactionAfter5.Add((int)item.PercentOfAllData);
                }
                <div style="margin-bottom:15px; text-align:center">
                    POZIOM REAKCJI OSIAGNIETE PO 5 SWIECACH
                </div>
                <canvas id="reactionAfter5candles"></canvas>
                <p style="text-align:center; font-size:14px; font-style:italic; color:#807e7e">% ukladów osiągający dany poziom reakcji 5 świec po punkcie D</p> 

            </div>
            <div class="col-md-4">
                @*
                <div style="margin-bottom:15px;">
                    POZIOM REAKCJI OSIAGNIETE PO 10 SWIECACH
                </div>
                @foreach (var item in Model.Statistics.ReactionAfter10Candles)
                {
                    <div class="row" style="margin-bottom:5px;">
                        <div class="col-md-2">
                            <span style="color:#920063;"><strong>@item.PercentOfAllData.ToString("#")%</strong> </span>
                        </div>
                        <div class="col-md-7">
                            ukladow osiagnelo poziom
                        </div>
                        <div class="col-md-2" style="text-align:center">
                            <a asp-controller="Info" asp-action="Reactions" style="color:#920063">@Model.ReactionLevels.Find(h => h.Id == item.ReactionId).Name</a>
                        </div>
                    </div>
                }
                *@

                @foreach (var item in Model.Statistics.ReactionAfter10Candles)
                {
                    chartDataReactionAfter10.Add((int)item.PercentOfAllData);
                }
                <div style="margin-bottom:15px; text-align:center">
                    POZIOM REAKCJI OSIAGNIETE PO 10 SWIECACH
                </div>
                <canvas id="reactionAfter10candles"></canvas>
                <p style="text-align:center; font-size:14px; font-style:italic; color:#807e7e">% ukladów osiągający dany poziom reakcji 10 świec po punkcie D</p>   

            </div>
            <div class="col-md-4">
                @*
                <div style="margin-bottom:15px;">
                    POZIOM REAKCJI OSIAGNIETE PO 20 SWIECACH
                </div>
                @foreach (var item in Model.Statistics.ReactionAfter20Candles)
                {
                    <div class="row" style="margin-bottom:5px;">
                        <div class="col-md-2">
                            <span style="color:#920063;"><strong>@item.PercentOfAllData.ToString("#")%</strong> </span>
                        </div>
                        <div class="col-md-7">
                            ukladow osiagnelo poziom
                        </div>
                        <div class="col-md-2" style="text-align:center">
                            <a asp-controller="Info" asp-action="Reactions" style="color:#920063">@Model.ReactionLevels.Find(h => h.Id == item.ReactionId).Name</a>
                        </div>
                    </div>
                }
                *@

                @foreach (var item in Model.Statistics.ReactionAfter20Candles)
                {
                    chartDataReactionAfter20.Add((int)item.PercentOfAllData);
                }
                <div style="margin-bottom:15px; text-align:center">
                    POZIOM REAKCJI OSIAGNIETE PO 20 SWIECACH
                </div>
                <canvas id="reactionAfter20candles"></canvas>
                <p style="text-align:center; font-size:14px; font-style:italic; color:#807e7e">% ukladów osiągający dany poziom reakcji 20 świec po punkcie D</p> 

            </div>
        </div>


        <div style="margin-top:40px;">
            <a asp-controller="HarmonicPatterns"
               asp-action="Index"
               asp-route-intervalid="@Model.SelectedIntervalId"
               asp-route-patterntypeid="@Model.SelectedPatternId"
               asp-route-instrumentid="@Model.SelectedInstrumentId"
               asp-route-patterndirectid="@Model.SelectedDirectId"
               class="btn button-blueframe">
                Pokaz uklady harmoniczne
            </a>
            <a asp-controller="Info" asp-action="Patterns" class="btn button-blueframe" style="margin-left:10px;">O ukladach harmonicznych</a>
            <a asp-controller="Info" asp-action="Reactions" class="btn button-blueframe" style="margin-left:10px;">O poziomach reakcji</a>
        </div>



    </div>
</div>


<div class="container" style="margin-top:10px">

    @*
    <div class="row">
        <div class="row admin-panel">
            <h3 class="admin-panel-text">W budowie ;)</h3>
            <h5 class="admin-panel-text">Wykresy, analizy danych</h5>
            <h5 class="admin-panel-text">Jaki procent ukladow po osiagnieciu poziomu B osiąga poziom C i A?</h5>
            <h5 class="admin-panel-text">Jakie uklady szybciej osiagaja poziom B C A?</h5>
            <h5 class="admin-panel-text">W jakich godzinach i na jakich interwalach pojawia sie najwiecej ukladow?</h5>
            <h5 class="admin-panel-text">W ktorych godzinach uklady sie najlepiej realizują?</h5>
            <h5 class="admin-panel-text">itd...</h5>
        </div>
    </div>
        *@

    

    @*
    <row style="margin-top:50px; margin-bottom:100px;">
        <h3>ANALIZA REAKCJI</h3>
        @{
            foreach (var reaction in Model.ReactionLevels)
            {
                var statisticReactionList = Model.Statistics.ReactionFrom5candlesTo10candles.Where(h => h.FirstReactionId == reaction.Id);
                <h4 style="margin-top:30px;">uklady, ktore po 5 świecach osiągnely poziom <span><a asp-controller="Info" asp-action="Reactions" style="color:#920063">@reaction.Name</a></span> </h4>

                foreach (var reactionStat in statisticReactionList)
                {
                    <div class="row" style="margin-bottom:5px;">
                        <div class="col-md-offset-1">
                            <span style="color:#920063;"><strong>@reactionStat.Percent.ToString("#")%</strong> </span>
                            osiaga poziom
                            <a asp-controller="Info" asp-action="Reactions" style="color:#920063">@Model.ReactionLevels.Find(h => h.Id == reactionStat.SecondReactionId).Name</a>
                             po 10 swiecach
                        </div>

                    </div>
                }
            }

            foreach (var reaction in Model.ReactionLevels)
            {
                var statisticReactionList = Model.Statistics.ReactionFrom5candlesTo20candles.Where(h => h.FirstReactionId == reaction.Id);
                <h4 style="margin-top:30px;">uklady, ktore po 5 świecach osiągnely poziom <span><a asp-controller="Info" asp-action="Reactions" style="color:#920063">@reaction.Name</a></span> </h4>
                foreach (var reactionStat in statisticReactionList)
                {
                    <div class="row" style="margin-bottom:5px;">
                        <div class="col-md-offset-1">
                            <span style="color:#920063;"><strong>@reactionStat.Percent.ToString("#")%</strong> </span>
                            osiaga poziom
                            <a asp-controller="Info" asp-action="Reactions" style="color:#920063">@Model.ReactionLevels.Find(h => h.Id == reactionStat.SecondReactionId).Name</a>
                             po 20 swiecach
                        </div>

                    </div>
                }
            }
        }
    </row>
    *@

    <row style="margin-top:50px; margin-bottom:300px;">
        <h1 style="text-align:center">ANALIZA REAKCJI</h1>

        <div class="row">
            <div class="row info-panel">
                <h5 class="info-panel-text"><span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span> Jak czytać analizę reakcji</h5>
                <p class="info-panel-text">
                    Analiza reakcji składa sie z dwóch części. Pierwsza część dotyczy poziomów, w których znalazły się wykresy cenowe 10 świec po 
                    zrealizowaniu się układu harmonicznego, tzn. 10 świec po punkcie D, naromiast część druga dotyczy poziomów, 
                    do których doceira wykres po 20 świecach od punktu D.
                </p>
                <p class="info-panel-text">
                    Analiza reakcji odpowiada na pytania typu: do jakich poziomów najczęściej dochodzi cena po 10 świecach
                    w sytuacji gdy po 5 świecach od punktu D cena znajdowała się w okolicach poziomu B? 
                </p>

            </div>
        </div>

        <h2 style="text-align:center">poziomy osiągane przez uklady po <strong>10</strong> swiecach w zaleznosci od poziomu osiagnietego po 5 swiecach</h2>

        <div class="col-md-6">
            <h5 style="margin-top:60px; text-align:center">poziom osiagany przez uklady po 10 swiecach w sytuacji gdy po 5 swiecach osiagnieto poziom <span><a asp-controller="Info" asp-action="Reactions" style="color:#920063">-D</a></span></h5>
            <canvas id="reaction_Bafter10candles"></canvas>  
            <p style="text-align:center; font-size:14px; font-style:italic; color:#807e7e">dane w %</p>         
        </div>
        <div class="col-md-6">
            <h5 style="margin-top:60px; text-align:center">poziom osiagany przez uklady po 10 swiecach w sytuacji gdy po 5 swiecach osiagnieto poziom <span><a asp-controller="Info" asp-action="Reactions" style="color:#920063">DB</a></span></h5>
            <canvas id="reactionAafter10candles"></canvas>
            <p style="text-align:center; font-size:14px; font-style:italic; color:#807e7e">dane w %</p>
        </div>
        <div class="col-md-6">
            <h5 style="margin-top:80px; text-align:center">poziom osiagany przez uklady po 10 swiecach w sytuacji gdy po 5 swiecach osiagnieto poziom <span><a asp-controller="Info" asp-action="Reactions" style="color:#920063">BC</a></span></h5>
            <canvas id="reactionBafter10candles"></canvas>
            <p style="text-align:center; font-size:14px; font-style:italic; color:#807e7e">dane w %</p>
        </div>
        <div class="col-md-6">
            <h5 style="margin-top:80px; text-align:center">poziom osiagany przez uklady po 10 swiecach w sytuacji gdy po 5 swiecach osiagnieto poziom <span><a asp-controller="Info" asp-action="Reactions" style="color:#920063">CA</a></span></h5>
            <canvas id="reactionCafter10candles"></canvas>
            <p style="text-align:center; font-size:14px; font-style:italic; color:#807e7e">dane w %</p>
        </div>


        <div class="col-md-6 col-md-offset-3">
            <h5 style="margin-top:80px; text-align:center">poziom osiagany przez uklady po 10 swiecach w sytuacji gdy po 5 swiecach osiagnieto poziom <span><a asp-controller="Info" asp-action="Reactions" style="color:#920063">A+</a></span></h5>
            <canvas id="reactionA_after10candles"></canvas>
            <p style="text-align:center; font-size:14px; font-style:italic; color:#807e7e">dane w %</p>
        </div>



        @*20 candles*@
        <div class="col-md-12" style="margin-top:100px;">
            <h2 style="text-align:center">poziomy osiągane przez uklady po <strong>20</strong> swiecach w zaleznosci od poziomu osiagnietego po 5 swiecach</h2>
        </div>
        

        <div class="col-md-6">
            <h5 style="margin-top:60px; text-align:center">poziom osiagany przez uklady po 20 swiecach w sytuacji gdy po 5 swiecach osiagnieto poziom <span><a asp-controller="Info" asp-action="Reactions" style="color:#920063">-D</a></span></h5>
            <canvas id="reaction_Bafter20candles"></canvas>
            <p style="text-align:center; font-size:14px; font-style:italic; color:#807e7e">dane w %</p>
        </div>
        <div class="col-md-6">
            <h5 style="margin-top:60px; text-align:center">poziom osiagany przez uklady po 20 swiecach w sytuacji gdy po 5 swiecach osiagnieto poziom <span><a asp-controller="Info" asp-action="Reactions" style="color:#920063">DB</a></span></h5>
            <canvas id="reactionAafter20candles"></canvas>
            <p style="text-align:center; font-size:14px; font-style:italic; color:#807e7e">dane w %</p>
        </div>
        <div class="col-md-6">
            <h5 style="margin-top:80px; text-align:center">poziom osiagany przez uklady po 20 swiecach w sytuacji gdy po 5 swiecach osiagnieto poziom <span><a asp-controller="Info" asp-action="Reactions" style="color:#920063">BC</a></span></h5>
            <canvas id="reactionBafter20candles"></canvas>
            <p style="text-align:center; font-size:14px; font-style:italic; color:#807e7e">dane w %</p>
        </div>
        <div class="col-md-6">
            <h5 style="margin-top:80px; text-align:center">poziom osiagany przez uklady po 20 swiecach w sytuacji gdy po 5 swiecach osiagnieto poziom <span><a asp-controller="Info" asp-action="Reactions" style="color:#920063">CA</a></span></h5>
            <canvas id="reactionCafter20candles"></canvas>
            <p style="text-align:center; font-size:14px; font-style:italic; color:#807e7e">dane w %</p>
        </div>
        <div class="col-md-6 col-md-offset-3">
            <h5 style="margin-top:80px; text-align:center">poziom osiagany przez uklady po 20 swiecach w sytuacji gdy po 5 swiecach osiagnieto poziom <span><a asp-controller="Info" asp-action="Reactions" style="color:#920063">A+</a></span></h5>
            <canvas id="reactionA_after20candles"></canvas>
            <p style="text-align:center; font-size:14px; font-style:italic; color:#807e7e">dane w %</p>
        </div>

            @foreach (var reaction in Model.ReactionLevels)
            {
                var statisticReactionList10c = Model.Statistics.ReactionFrom5candlesTo10candles.Where(h => h.FirstReactionId == reaction.Id);
                var list10c = new List<int>();

                foreach (var reactionStat in statisticReactionList10c)
                {
                    list10c.Add((int)reactionStat.Percent);
                }
                chartData10c.Add(list10c);

                var statisticReactionList20c = Model.Statistics.ReactionFrom5candlesTo20candles.Where(h => h.FirstReactionId == reaction.Id);
                var list20c = new List<int>();

                foreach (var reactionStat in statisticReactionList20c)
                {
                    list20c.Add((int)reactionStat.Percent);
                }
                chartData20c.Add(list20c);
            }

    </row>


    <div style="background-color:#ff6a00"></div>
    

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/lib/Chart.js/dist/Chart.js"></script>
    <script>

        var data = @Newtonsoft.Json.JsonConvert.SerializeObject(chartDataReactionAfter5);
        var ctx = document.getElementById("reactionAfter5candles");
        var reactionAfter5candles = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ["-D", "DB", "BC", "CA", "A+"],
                datasets: [{
                    label: '% układów',
                    data: data,
                    backgroundColor: [
                        "#167aa3",
                        "#920063",
                        "#3cbc98",
                        "#ef9845",
                        "#ef4569"
                    ],
                    borderColor: [
                        "#d6d9dc",
                        "#d6d9dc",
                        "#d6d9dc",
                        "#d6d9dc",
                        "#d6d9dc"
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero:true
                        }
                    }]
                }
            }
        });

        data = @Newtonsoft.Json.JsonConvert.SerializeObject(chartDataReactionAfter10);
        ctx = document.getElementById("reactionAfter10candles");
        var reactionAfter10candles = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ["-D", "DB", "BC", "CA", "A+"],
                datasets: [{
                    label: '% układów',
                    data: data,
                    backgroundColor: [
                        "#167aa3",
                        "#920063",
                        "#3cbc98",
                        "#ef9845",
                        "#ef4569"
                    ],
                    borderColor: [
                        "#d6d9dc",
                        "#d6d9dc",
                        "#d6d9dc",
                        "#d6d9dc",
                        "#d6d9dc"
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero:true
                        }
                    }]
                }
            }
        });

        data = @Newtonsoft.Json.JsonConvert.SerializeObject(chartDataReactionAfter20);
        ctx = document.getElementById("reactionAfter20candles");
        var reactionAfter20candles = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ["-D", "DB", "BC", "CA", "A+"],
                datasets: [{
                    label: '% układów',
                    data: data,
                    backgroundColor: [
                        "#167aa3",
                        "#920063",
                        "#3cbc98",
                        "#ef9845",
                        "#ef4569"
                    ],
                    borderColor: [
                        "#d6d9dc",
                        "#d6d9dc",
                        "#d6d9dc",
                        "#d6d9dc",
                        "#d6d9dc"
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero:true
                        }
                    }]
                }
            }
        });

        @*10 candles*@
        data = @Newtonsoft.Json.JsonConvert.SerializeObject(chartData10c[0]);
        ctx = document.getElementById("reaction_Bafter10candles");
        var reaction_Bafter10candles = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ["-D", "DB", "BC", "CA", "A+"],
            datasets: [{
                data: data,
                backgroundColor: [
                    "#FF6384",
                    "#36A2EB",
                    "#FFCE56",
                    "#4bc0c0",
                    'rgba(255, 159, 64, 1)'
                ],
                borderColor: [
                    'rgba(255,255,255,255)'
                ],
                borderWidth: 1
            }]
        },
        });

        data = @Newtonsoft.Json.JsonConvert.SerializeObject(chartData10c[1]);
        ctx = document.getElementById("reactionAafter10candles");
        var reactionAafter10candles = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ["-D", "DB", "BC", "CA", "A+"],
                datasets: [{
                    data: data,
                    backgroundColor: [
                        "#FF6384",
                        "#36A2EB",
                        "#FFCE56",
                        "#4bc0c0",
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderColor: [
                        'rgba(255,255,255,255)'
                    ],
                    borderWidth: 1
                }]
            },
        });

        data = @Newtonsoft.Json.JsonConvert.SerializeObject(chartData10c[2]);
        ctx = document.getElementById("reactionBafter10candles");
        var reactionBafter10candles = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ["-D", "DB", "BC", "CA", "A+"],
                datasets: [{
                    data: data,
                    backgroundColor: [
                        "#FF6384",
                        "#36A2EB",
                        "#FFCE56",
                        "#4bc0c0",
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderColor: [
                        'rgba(255,255,255,255)'
                    ],
                    borderWidth: 1
                }]
            },
        });

        data = @Newtonsoft.Json.JsonConvert.SerializeObject(chartData10c[3]);
        ctx = document.getElementById("reactionCafter10candles");
        var reactionCafter10candles = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ["-D", "DB", "BC", "CA", "A+"],
                datasets: [{
                    data: data,
                    backgroundColor: [
                        "#FF6384",
                        "#36A2EB",
                        "#FFCE56",
                        "#4bc0c0",
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderColor: [
                        'rgba(255,255,255,255)'
                    ],
                    borderWidth: 1
                }]
            },
        });

        data = @Newtonsoft.Json.JsonConvert.SerializeObject(chartData10c[4]);
        ctx = document.getElementById("reactionA_after10candles");
        var reactionA_after10candles = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ["-D", "DB", "BC", "CA", "A+"],
                datasets: [{
                    data: data,
                    backgroundColor: [
                        "#FF6384",
                        "#36A2EB",
                        "#FFCE56",
                        "#4bc0c0",
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderColor: [
                        'rgba(255,255,255,255)'
                    ],
                    borderWidth: 1
                }]
            },
        });

        /*20 candles*/

        data = @Newtonsoft.Json.JsonConvert.SerializeObject(chartData20c[0]);
        ctx = document.getElementById("reaction_Bafter20candles");
        var reaction_Bafter20candles = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ["-D", "DB", "BC", "CA", "A+"],
                datasets: [{
                    data: data,
                    backgroundColor: [
                        "#FF6384",
                        "#36A2EB",
                        "#FFCE56",
                        "#4bc0c0",
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderColor: [
                        'rgba(255,255,255,255)'
                    ],
                    borderWidth: 1
                }]
            },
        });

        data = @Newtonsoft.Json.JsonConvert.SerializeObject(chartData20c[1]);
        ctx = document.getElementById("reactionAafter20candles");
        var reactionAafter20candles = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ["-D", "DB", "BC", "CA", "A+"],
                datasets: [{
                    data: data,
                    backgroundColor: [
                        "#FF6384",
                        "#36A2EB",
                        "#FFCE56",
                        "#4bc0c0",
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderColor: [
                        'rgba(255,255,255,255)'
                    ],
                    borderWidth: 1
                }]
            },
        });

        data = @Newtonsoft.Json.JsonConvert.SerializeObject(chartData20c[2]);
        ctx = document.getElementById("reactionBafter20candles");
        var reactionBafter20candles = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ["-D", "DB", "BC", "CA", "A+"],
                datasets: [{
                    data: data,
                    backgroundColor: [
                        "#FF6384",
                        "#36A2EB",
                        "#FFCE56",
                        "#4bc0c0",
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderColor: [
                        'rgba(255,255,255,255)'
                    ],
                    borderWidth: 1
                }]
            },
        });

        data = @Newtonsoft.Json.JsonConvert.SerializeObject(chartData20c[3]);
        ctx = document.getElementById("reactionCafter20candles");
        var reactionCafter20candles = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ["-D", "DB", "BC", "CA", "A+"],
                datasets: [{
                    data: data,
                    backgroundColor: [
                        "#FF6384",
                        "#36A2EB",
                        "#FFCE56",
                        "#4bc0c0",
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderColor: [
                        'rgba(255,255,255,255)'
                    ],
                    borderWidth: 1
                }]
            },
        });

        data = @Newtonsoft.Json.JsonConvert.SerializeObject(chartData20c[4]);
        ctx = document.getElementById("reactionA_after20candles");
        var reactionA_after20candles = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ["-D", "DB", "BC", "CA", "A+"],
                datasets: [{
                    data: data,
                    backgroundColor: [
                        "#FF6384",
                        "#36A2EB",
                        "#FFCE56",
                        "#4bc0c0",
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderColor: [
                        'rgba(255,255,255,255)'
                    ],
                    borderWidth: 1
                }]
            },
        });

    </script>
}

</div>
